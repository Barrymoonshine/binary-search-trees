(()=>{"use strict";const l=t=>{const n=t.length,e=Math.round(n/2),r=t.slice(0,e),s=t.slice(e,n);return n<=1?t:((l,t)=>{const n=[];for(;l.length&&t.length;)l[0]<t[0]?n.push(l.shift()):n.push(t.shift());return[...n,...l,...t]})(l(r),l(s))},t=(l,t=null,n=null)=>({data:l,left:t,right:n}),n=(l,t="",e=!0)=>{null!==l&&(null!==l.right&&n(l.right,`${t}${e?"│   ":"    "}`,!1),console.log(`${t}${e?"└── ":"┌── "}${l.data}`),null!==l.left&&n(l.left,`${t}${e?"    ":"│   "}`,!0))};let e=null;const r=(l,n,e)=>{if(n>e)return null;const s=parseInt((n+e)/2),o=t(l[s]);return o.left=r(l,n,s-1),o.right=r(l,s+1,e),o},s=(l,n)=>{console.log(n),null===n&&(e=t(l)),n.data===l?console.log("Error, data already exists in tree"):n.data>l?null!==n.left?s(l,n.left):n.left=t(l):null!==n.right?s(l,n.right):n.right=t(l)},o=[1,7,4,23,8,9,4,3,5,7,9,67,6345,324],u=o.length-1,h=(l=>{const t=[];return l.forEach((l=>{t.includes(l)||t.push(l)})),t})(l(o));e=r(h,0,u),console.log(e),s(10,e),n(e)})();
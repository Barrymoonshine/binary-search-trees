(()=>{"use strict";const t=l=>{const n=l.length,e=Math.round(n/2),r=l.slice(0,e),s=l.slice(e,n);return n<=1?l:((t,l)=>{const n=[];for(;t.length&&l.length;)t[0]<l[0]?n.push(t.shift()):n.push(l.shift());return[...n,...t,...l]})(t(r),t(s))},l=(t,l=null,n=null)=>({data:t,left:l,right:n}),n=(t,l="",e=!0)=>{null!==t&&(null!==t.right&&n(t.right,`${l}${e?"│   ":"    "}`,!1),console.log(`${l}${e?"└── ":"┌── "}${t.data}`),null!==t.left&&n(t.left,`${l}${e?"    ":"│   "}`,!0))};let e=null;const r=(t,n,e)=>{if(n>e)return null;const s=parseInt((n+e)/2),u=l(t[s]);return u.left=r(t,n,s-1),u.right=r(t,s+1,e),u},s=(t,n)=>{null===n&&(e=l(t)),n.data===t?console.log("Error, data already exists in tree"):n.data>t?null!==n.left?s(t,n.left):n.left=l(t):null!==n.right?s(t,n.right):n.right=l(t)},u=[1,7,4,23,8,9,4,3,5,7,9,67,6345,324],o=u.length-1,h=(t=>{const l=[];return t.forEach((t=>{l.includes(t)||l.push(t)})),l})(t(u));e=r(h,0,o),console.log(e),s(10,e),n(e)})();